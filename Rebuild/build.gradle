apply plugin: 'com.android.application'
apply from: "${rootDir}/gradle/gradle-findbugs/findbugs.gradle"

repositories {
    maven {
        url 'https://raw.github.com/rejasupotaro/AsyncRssClient/master/AsyncRssClient/repository'
    }
    maven { url 'https://raw.github.com/rejasupotaro/RobotGirl/master/RobotGirl/repository' }
    flatDir {
        dirs 'src/main/libs'
    }
}

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 0 // bump for dogfood builds, public betas, etc.
def revisionHash = ["sh", "-c", "cd ${project.rootDir} ; git rev-parse --short HEAD"].execute().in.text.trim()

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "rejasupotaro.rebuild"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}-${revisionHash}"
    }

    def hasReleaseAuthority = new File("${rootDir}/secret.gradle").exists()
    if (hasReleaseAuthority) {
        apply from: "${rootDir}/secret.gradle"
        signingConfigs {
            release {
                storeFile file('rebuild.keystore')
                storePassword project.storePassword
                keyAlias project.keyAlias
                keyPassword project.keyPassword
            }
        }
    }

    buildTypes {
        debug {
            debuggable true
            versionNameSuffix '.debug'
        }

        if (hasReleaseAuthority) {
            release {
                signingConfig signingConfigs.release
                debuggable false
                proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
                proguardFile file('proguard-release.txt')
            }
        }
    }

    productFlavors {
        staging {}
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'ic_launcher.png'
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile fileTree(dir: 'src/main/libs', include: '*.jar')
    compile 'com.android.support:appcompat-v7:25.0.0'
    compile 'com.android.support:recyclerview-v7:25.0.0'
    compile 'com.android.support:cardview-v7:25.0.0'
    compile 'com.jakewharton:butterknife:6.0.0'
    compile 'rejasupotaro:async-rss-client:0.0.6'
    compile 'com.squareup:otto:1.3.2'
    compile 'com.loopj.android:android-async-http:1.4.4'
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'com.squareup.picasso:picasso:2.0.0'
    compile 'org.twitter4j:twitter4j-core:3.0.5'
    compile 'com.netflix.rxjava:rxjava-android:0.18.4'
    compile 'com.joanzapata.android:android-iconify:1.0.6'
    compile "com.mixpanel.android:mixpanel-android:4.2.1@aar"
    compile 'uk.me.lewisdeane.ldialogs:ldialogs:1.0@aar'
    compile 'com.github.castorflex.smoothprogressbar:library-circular:1.0.1'

    androidTestCompile fileTree(dir: 'src/androidTest/libs', include: '*.jar')
    androidTestCompile 'com.squareup:fest-android:1.0.7'
}
